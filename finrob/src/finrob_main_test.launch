<launch> 
  <rosparam command="load" file="/home/pi/catkin_ws/src/mobrob_util/src/robot_info.yaml" />
  <rosparam command="load" file="/home/pi/catkin_ws/src/armrob_util/src/robot_arm_info.yaml" />

  <group ns="robot_operate">
    <node pkg="mobrob" name="wheel_control_node" type="wheel_control_node.py"/>
    <node pkg="mobrob" name="sensing_node" type="sensing_node.py"/>
    <node pkg="mobrob" name="sensors_processing_node" type="sensors_processing.py"/>
  </group>


 <!-- New Group called "robot_estimate" to estimate the robot's location based only on sensor data. --> 
 <!-- In this group, launch the "dead_reckoning" node and another "animator" to draw where the robot thinks it is. -->
  <group ns="robot_estimate">
    <!-- first a "dead reckoning" node -->
    <node pkg="mobrob" name="dead_reckoning" type="dead_reckoning.py" />
    
    <!-- then an "animator" node, but remapped to make it subscribe to "/robot_pose_estimated" instead of "/robot_pose_simulated"  -->
    <node pkg="mobrob" name="dead_reckoning_animator" type="mobile_robot_animator.py" >
        <remap from="/robot_pose_simulated" to="/robot_pose_estimated"/>    
    </node>
  </group>


  <group ns="robot_control">
    <node pkg="finrob" name="closed_loop_path_follower" type="closed_loop_path_follower.py"/>    
    <node pkg="mobrob" name="waypoint_seeker" type="waypoint_seeker.py"/>
    <!--node pkg="finrob" name="main" type="main.py"/ -->
    <node pkg="finrob" name="triangulation" type="triangulation.py" />
  </group>

  <group ns="arm_control">
     <!--<node pkg="finrob" name="inverse_kinematics" type="inverse_kinematics.py" /> -->
     <node pkg="finrob" name="command_arm" type="command_arm.py" />
  </group>
  
  <group ns="robot_simulate">
    <node pkg="mobrob" name="robot_simulator" type="mobile_robot_kinematic_simulator.py"/>
    <node pkg="mobrob" name="robot_animator" type="mobile_robot_animator.py"/>
  </group>


</launch>
